<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video Game Sales Treemap</title>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f0f0f0;
        }
        #title {
            font-size: 2em;
            margin-bottom: 10px;
            text-align: center;
        }
        #description {
            font-size: 1.2em;
            margin-bottom: 20px;
            color: #666;
            text-align: center;
        }
        #container {
            position: relative;
            width: 960px;
            height: 600px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.12);
        }
        .tile {
            stroke: white;
            stroke-width: 1px;
        }
        .tile:hover {
            stroke: black;
            stroke-width: 2px;
            cursor: pointer;
        }
        #tooltip {
            position: absolute;
            padding: 10px;
            background: rgba(255, 255, 255, 0.95);
            border: 1px solid #ddd;
            border-radius: 4px;
            pointer-events: none;
            opacity: 0;
            box-shadow: 0 1px 3px rgba(0,0,0,0.12);
        }
        #legend {
            margin-top: 20px;
            width: 960px;
            height: 100px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.12);
            padding: 10px;
        }
        .legend-item {
            stroke: white;
            stroke-width: 1px;
        }
    </style>
</head>
<body>
    <h1 id="title">Video Game Sales</h1>
    <p id="description">Top 100 Most Sold Video Games Grouped by Platform</p>
    <div id="container">
        <div id="tooltip"></div>
        <svg id="treemap"></svg>
    </div>
    <svg id="legend"></svg>

    <script>
        // Constants
        const width = 960;
        const height = 600;
        const legendWidth = 960;
        const legendHeight = 100;

        // Create SVG
        const svg = d3.select('#treemap')
            .attr('width', width)
            .attr('height', height);

        // Create legend SVG
        const legend = d3.select('#legend')
            .attr('width', legendWidth)
            .attr('height', legendHeight);

        // Color scale for different categories
        const colorScale = d3.scaleOrdinal(d3.schemeCategory10);

        // Load data
        d3.json('https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/video-game-sales-data.json')
            .then(data => {
                // Create treemap layout
                const root = d3.hierarchy(data)
                    .sum(d => d.value)
                    .sort((a, b) => b.value - a.value);

                d3.treemap()
                    .size([width, height])
                    .padding(1)
                    (root);

                // Draw tiles
                const cell = svg.selectAll('g')
                    .data(root.leaves())
                    .enter()
                    .append('g')
                    .attr('transform', d => `translate(${d.x0},${d.y0})`);

                cell.append('rect')
                    .attr('class', 'tile')
                    .attr('data-name', d => d.data.name)
                    .attr('data-category', d => d.data.category)
                    .attr('data-value', d => d.data.value)
                    .attr('width', d => d.x1 - d.x0)
                    .attr('height', d => d.y1 - d.y0)
                    .attr('fill', d => colorScale(d.data.category))
                    .on('mouseover', (event, d) => {
                        d3.select('#tooltip')
                            .style('opacity', 0.9)
                            .style('left', (event.pageX + 10) + 'px')
                            .style('top', (event.pageY - 28) + 'px')
                            .attr('data-value', d.data.value)
                            .html(
                                `Name: ${d.data.name}<br>
                                Category: ${d.data.category}<br>
                                Value: ${d.data.value}`
                            );
                    })
                    .on('mouseout', () => {
                        d3.select('#tooltip').style('opacity', 0);
                    });

                // Add text labels
                cell.append('text')
                    .selectAll('tspan')
                    .data(d => d.data.name.split(/(?=[A-Z][^A-Z])/g))
                    .enter()
                    .append('tspan')
                    .attr('x', 4)
                    .attr('y', (d, i) => 13 + i * 10)
                    .text(d => d)
                    .style('font-size', '8px');

                // Create legend
                const categories = root.leaves().map(d => d.data.category)
                    .filter((v, i, a) => a.indexOf(v) === i);

                const legendRects = legend.selectAll('g')
                    .data(categories)
                    .enter()
                    .append('g')
                    .attr('transform', (d, i) => 
                        `translate(${(i % 6) * 160}, ${Math.floor(i / 6) * 25 + 10})`);

                legendRects.append('rect')
                    .attr('class', 'legend-item')
                    .attr('width', 15)
                    .attr('height', 15)
                    .attr('fill', d => colorScale(d));

                legendRects.append('text')
                    .attr('x', 20)
                    .attr('y', 12)
                    .text(d => d)
                    .style('font-size', '12px');
            });
    </script>
</body>
</html>
